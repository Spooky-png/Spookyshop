[{"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\index.js":"1","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\App.js":"2","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Products\\Product\\Product.jsx":"4","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Products\\Product\\styles.js":"5","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Navbar\\Navbar.jsx":"6","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Navbar\\styles.js":"7","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\index.js":"8","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Products\\styles.js":"9","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\lib\\commerce.js":"10","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Cart\\Cart.jsx":"11","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Cart\\styles.js":"12","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Cart\\CartItem\\styles.js":"14","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\AddressForm.jsx":"18","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":151,"mtime":1611854457738,"results":"21","hashOfConfig":"22"},{"size":3030,"mtime":1613952178851,"results":"23","hashOfConfig":"22"},{"size":731,"mtime":1612294331895,"results":"24","hashOfConfig":"22"},{"size":1332,"mtime":1612294123985,"results":"25","hashOfConfig":"22"},{"size":403,"mtime":1611941824966,"results":"26","hashOfConfig":"22"},{"size":1461,"mtime":1612640707248,"results":"27","hashOfConfig":"22"},{"size":1631,"mtime":1611943713539,"results":"28","hashOfConfig":"22"},{"size":233,"mtime":1612816362841,"results":"29","hashOfConfig":"22"},{"size":298,"mtime":1611944016069,"results":"30","hashOfConfig":"22"},{"size":127,"mtime":1612291640422,"results":"31","hashOfConfig":"22"},{"size":1952,"mtime":1612815793684,"results":"32","hashOfConfig":"22"},{"size":597,"mtime":1612383122117,"results":"33","hashOfConfig":"22"},{"size":1312,"mtime":1612640557939,"results":"34","hashOfConfig":"22"},{"size":349,"mtime":1612384012545,"results":"35","hashOfConfig":"22"},{"size":3266,"mtime":1614008611555,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1612816267232,"results":"37","hashOfConfig":"22"},{"size":3064,"mtime":1614009188785,"results":"38","hashOfConfig":"22"},{"size":4998,"mtime":1613950961344,"results":"39","hashOfConfig":"22"},{"size":483,"mtime":1614008533139,"results":"40","hashOfConfig":"22"},{"size":1091,"mtime":1613405207293,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1049v6o",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\index.js",[],["87","88"],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\App.js",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Navbar\\Navbar.jsx",["89","90"],"import React from 'react';\r\nimport {AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core';\r\nimport { ShoppingCart } from '@material-ui/icons';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport logo from '../../assets/ghost.jpg';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = ({ totalItems }) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"Spooky Shop\" height=\"25px\" className={classes.image} />\r\n                        Spooky Shop\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === '/' && (\r\n                    <div className={classes.button}>\r\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\r\n                            <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div> )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\index.js",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Products\\styles.js",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\lib\\commerce.js",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Cart\\Cart.jsx",["91"],"import React from 'react'\r\nimport { Container, Typography, Button, Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useStyles from './styles';\r\nimport CartItem from './CartItem/CartItem';\r\nimport { CallMissedSharp } from '@material-ui/icons';\r\n\r\nconst Cart = ({ cart, handleUpdateCartQty, handleRemoveFromCart, handleEmptyCart }) => {\r\n    const classes = useStyles();\r\n\r\n    const EmptyCart = () => (\r\n        <Typography variant=\"subtitle1\">You have no items in your shopping cart, \r\n            <Link to=\"/\" className={classes.link}>click here to add some items</Link>!\r\n        </Typography>\r\n    );\r\n\r\n    const FilledCart = () => (\r\n        <>\r\n        <Grid container spacing={3}>\r\n            {cart.line_items.map((item) => (\r\n                <Grid item xs={12} sm={4} key={item.id}>\r\n                    <CartItem item={item} onUpdateCartQty={handleUpdateCartQty} onRemoveFromCart={handleRemoveFromCart}/>\r\n                </Grid>\r\n            ))};\r\n        </Grid>\r\n        <div className={classes.cardDetails}>\r\n            <Typography variant=\"h4\">Subtotal: {cart.subtotal.formatted_with_symbol}</Typography>\r\n            <div>\r\n                <Button className={classes.emptyButton} size=\"large\" type=\"button\" variant=\"contained\" color=\"secondary\" onClick={handleEmptyCart}>Empty Cart</Button>\r\n                <Button component={Link} to=\"/checkout\" className={classes.checkoutButton} size=\"large\" type=\"button\" variant=\"contained\" color=\"primary\">Checkout</Button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        </>\r\n    );\r\n\r\n    if(!cart.line_items) return 'Loading...';\r\n\r\n    return (\r\n        <Container>\r\n            <div className={classes.toolbar} />\r\n            <Typography className={classes.title} variant=\"h3\" gutterBottom>Your Shopping Cart</Typography>\r\n            { !cart.line_items.length ? <EmptyCart /> : <FilledCart />}\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Cart\r\n","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Cart\\styles.js",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\AddressForm.jsx",["92","93"],"import React, {useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport {useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    const methods = useForm();\r\n\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    };\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n    \r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n      };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if(shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision]);\r\n    return (\r\n        <>\r\n          <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n          <FormProvider {...methods}>\r\n            <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, setShippingOption }))}>\r\n              <Grid container spacing={3}>\r\n                <FormInput required name=\"firstName\" label=\"First name\" />\r\n                <FormInput required name=\"lastName\" label=\"Last name\" />\r\n                <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n                <FormInput required name=\"email\" label=\"Email\" />\r\n                <FormInput required name=\"city\" label=\"City\" />\r\n                <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n                <Grid item xs={12} sm={6}>\r\n                  <InputLabel>Shipping Country</InputLabel>\r\n                  <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                    {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                      <MenuItem key={item.id} value={item.id}>\r\n                        {item.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <InputLabel>Shipping Subdivision</InputLabel>\r\n                  <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                    {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                      <MenuItem key={item.id} value={item.id}>\r\n                        {item.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <InputLabel>Shipping Options</InputLabel>\r\n                  <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                    {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                      <MenuItem key={item.id} value={item.id}>\r\n                        {item.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n              <br />\r\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n              </div>\r\n            </form>\r\n          </FormProvider>\r\n        </>\r\n      );\r\n    };\r\n\r\nexport default AddressForm;\r\n","C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\Owner\\OneDrive\\Desktop\\spookyshop\\src\\components\\CheckoutForm\\Review.jsx",[],["94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":45,"nodeType":"102","messageId":"103","endLine":2,"endColumn":53},{"ruleId":"100","severity":1,"message":"104","line":2,"column":55,"nodeType":"102","messageId":"103","endLine":2,"endColumn":59},{"ruleId":"100","severity":1,"message":"105","line":7,"column":10,"nodeType":"102","messageId":"103","endLine":7,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":43,"column":8,"nodeType":"108","endLine":43,"endColumn":10,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":51,"column":8,"nodeType":"108","endLine":51,"endColumn":29,"suggestions":"111"},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'CallMissedSharp' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["117"],["114"],["115"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"122","text":"123"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"124","text":"125"},[1784,1786],"[checkoutToken.id]",[2051,2072],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]